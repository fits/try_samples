interface types {
    type cart-id = string
    type item-id = string
    type amount = s32
    type quantity = u32

    record cart-item {
        item: item-id,
        qty: quantity,
        unit-price: amount,
    }

    record empty-cart {
        id: cart-id,
    }

    record active-cart {
        id: cart-id,
        items: list<cart-item>
    }

    union cart {
        empty-cart,
        active-cart,
    }
}

default world cart-world {
    use self.types.{ cart, cart-id, item-id, quantity, amount }

    import find-price: func(item: item-id) -> option<amount>

    export create: func(id: cart-id) -> cart
    export add-item: func(state: cart, item: item-id, qty: quantity) -> option<cart>
}